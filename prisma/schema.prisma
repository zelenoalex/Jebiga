// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [id], references: [id])
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String     @default("user")
  email          String     @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String     @default("/user.png")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  accounts       Account[]
  sessions       Session[]
  Notes          Notes[]
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum TodoType {
  STANDARD
  PRIORITY
}

enum TodoState {
  IN_PROGRESS
  ON_STANDBY
  CANCELED
  COMPLETED
}

model Notes {
  id        String    @id @default(cuid()) @map("_id")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  title     String
  desc      String
  state     TodoState @default(ON_STANDBY)
  type      TodoType  @default(STANDARD)
  userEmail String
  user      User      @relation(fields: [userEmail], references: [email], onDelete: Cascade) 
}
